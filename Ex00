Files to turn in : ft_iterative_factorial.c
Allowed functions : None

• Create an iterated function that returns a number. This number is the result of a
factorial operation based on the number given as a parameter.
• If the argument is not valid the function should return 0.
• Overflows must not be handled, the function return will be undefined.
• Here’s how it should be prototyped :
int ft_iterative_factorial(int nb);

Here's an implementation of the `ft_iterative_factorial` function that calculates the factorial of a given number:

```c
int ft_iterative_factorial(int nb)
{
    if (nb < 0)
        return 0;

    int factorial = 1;
    for (int i = 1; i <= nb; i++)
    {
        factorial *= i;
    }

    return factorial;
}
```

In this implementation, the `ft_iterative_factorial` function takes an integer `nb` as a parameter and calculates its factorial iteratively.

If the input `nb` is negative, the function returns 0 because factorials are not defined for negative numbers.

Otherwise, the function initializes a variable `factorial` to 1 and uses a `for` loop to iterate from 1 to `nb`. In each iteration, it multiplies the `factorial` by the current value of `i`.

Finally, the calculated `factorial` value is returned.

Please note that this implementation does not handle overflow cases and the return value will be undefined if the factorial exceeds the range of an integer.
